{"version":3,"sources":["components/LoadPokemon.jsx","components/SearchBox.jsx","components/Attributes.jsx","App.js","reportWebVitals.js","index.js"],"names":["LoadPokemon","props","pokemon","statistics","pokeStats","Versions","Moves","Stats","useEffect","fetchingPoke","url","fetch","then","response","json","decipherFetch","document","getElementById","value","catch","error","getElementsByClassName","innerHTML","focus","obj","game_indices","moves","stats","forEach","element","push","version","name","m","move","s","stat","base_stat","className","toUpperCase","slice","id","onFocus","e","style","display","SearchBox","clickChange","type","placeholder","onKeyPress","onClick","Attributes","attribute","attr","i","length","splitAttribute","App","useState","setPokemon","pokemonStats","setPokemonStats","width","textAlign","key","inputValue","toLowerCase","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.954a548c.chunk.js","sourcesContent":["import { useEffect } from 'react';\n\nconst LoadPokemon = (props) => {\n\n    const {pokemon, statistics} = props;\n\n    let pokeStats = {\n        Versions: [],\n        Moves: [],\n        Stats: []\n    }\n\n    var needFetched = true;\n\n    useEffect(() => {\n        if(pokemon && needFetched){\n            fetchingPoke();\n        }\n    })\n\n    const handleSelectFocus = (e) => {\n        statistics(pokeStats);\n        document.getElementById('theSelect').style.display = 'none';\n    }\n\n    const fetchingPoke = () => {\n        const url = `https://pokeapi.co/api/v2/pokemon/${pokemon}`\n        fetch(url)\n        .then(response => response.json())\n        .then(response => {\n        \n        decipherFetch(response);\n\n        document.getElementById('theSelect').value = 'yes';\n        })\n        .catch(error => {\n            document.getElementById('theSelect').value = 'no';\n            document.getElementsByClassName('loadHeader')[0].innerHTML = 'Try Another Pokemon...';\n            document.getElementById('theSelect').focus();\n            })\n        }\n\n    const decipherFetch = (obj) => {\n        let game_indices = obj.game_indices;\n        let moves = obj.moves;\n        let stats = obj.stats;\n        game_indices.forEach(element => {\n            pokeStats.Versions.push(element.version.name);\n        });\n        moves.forEach(m => {\n            pokeStats.Moves.push(m.move.name);\n        })\n        stats.forEach(s => {\n            pokeStats.Stats.push(`${s.stat.name}-${s.base_stat}`)\n        })\n        document.getElementById('theSelect').focus();\n    \n    }\n\n            return (\n                <div>\n                    <h2 className='loadHeader font-effect-emboss'>{!pokemon\n                    ? 'Pick A Pokemon...'\n                    : pokemon[0].toUpperCase() + pokemon.slice(1)}</h2>\n                    <select id='theSelect' onFocus={handleSelectFocus}>\n                        <option value='no'>Loading...</option>\n                        <option value='yes'></option>\n                    </select>\n                </div>\n            )\n    } \n\n            \n\n\n\n\n\n\nexport default LoadPokemon;","import React from 'react';\n\nconst SearchBox = (props) => {\n\n    const {clickChange} = props;\n\n    return(\n        <div>\n        <input id='pokeInput' type='text' placeholder='Enter a Pokemon' onKeyPress={clickChange} />\n        <button onClick={clickChange}>Submit</button>\n        </div>\n    )\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Attributes = (props) => {\n\n    const { name, attribute} = props;\n\n    const splitAttribute = (attr) => {\n        var element = '';\n        for (let i=0; i < attr.length; i++){\n            element += (attr[i][0].toUpperCase() + attr[i].slice(1) + ' ');\n        }\n        return element;\n    }\n\n    if (attribute){\n        return (\n            <div id='attr-div'>\n                <h2>{name}</h2>\n                <p className='attr-info'>{typeof(attribute[0]) == \"string\"\n                    ? splitAttribute(attribute)\n                    : `No ${name}...`   \n                }</p>\n            </div>\n\n\n        )\n    } else {\n        return null;\n    }\n}\n\nexport default Attributes;","import React, { useState } from 'react';\n\nimport './App.css';\nimport LoadPokemon from './components/LoadPokemon';\nimport SearchBox from './components/SearchBox';\nimport Attributes from './components/Attributes';\n\n\nfunction App() {\n\n  const [pokemon, setPokemon] = useState('');\n\n  const [pokemonStats, setPokemonStats] = useState({\n    'Versions': [],\n    'Moves': [],\n    'Stats': []\n});\n\n  const handleClick = (e) => {\n    if(e.type === 'click' || e.key === 'Enter'){\n    let inputValue = document.getElementById('pokeInput').value.toLowerCase();\n    document.getElementById('pokeInput').value = '';\n    document.getElementById('theSelect').style.display = 'initial';\n    setPokemon(inputValue);\n    }\n  }\n\n  return (\n    <div className='container'>\n      <div style={{width: '100%', textAlign: 'center'}}>\n        <h1 className='main font-effect-shadow-multiple'>The Pokemon App</h1>\n        <SearchBox  clickChange={handleClick} />\n        <LoadPokemon pokemon={pokemon} statistics={setPokemonStats} />\n        <div className='load-poke'>\n          <Attributes name={'Versions'} attribute={pokemonStats.Versions}/>\n          <Attributes name={'Moves'} attribute={pokemonStats.Moves}/>\n          <Attributes name={'Stats'} attribute={pokemonStats.Stats}/>\n        </div>\n      </div>\n    </div>\n  )\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}